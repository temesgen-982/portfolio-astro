---
import type { Repo, LanguageStats } from '../lib/github'; // Ensure LanguageStats is imported if it's in the same file as Repo
import { Star, BookMarked, Github, ExternalLink } from 'lucide-svelte'; // Added ExternalLink for live site

interface Props {
  repo: Repo;
}

const { repo } = Astro.props;

// Determine if the repo has a live site
const isLive = !!repo.homepage?.startsWith('http');

// The main card link points to homepage if live, otherwise GitHub URL
const cardLink = isLive ? repo.homepage : repo.html_url;
---

<div class="border border-dark-steal/40 dark:border-medium-gray rounded-lg p-4 bg-light-gray dark:bg-dark-slate hover:shadow-lg transition-shadow duration-200">
    <div class="flex items-center justify-between gap-3 mb-2">
        <h3 class="text-xl font-bold">{repo.name}</h3>
        {!isLive && <BookMarked strokeWidth={1.5} />}
      </div>
    
      <div class="flex items-center justify-between text-sm mt-4"> 
        <div class="flex items-center gap-2">
            <a
              href={repo.html_url}
              target="_blank"
              rel="noopener noreferrer"
              class="text-xs flex items-center gap-1 hover:underline"
            >
              <Github strokeWidth={1.5} class="w-4 h-4" />
              GitHub
            </a>
            {isLive && (
              <a
                href={repo.homepage}
                target="_blank"
                rel="noopener noreferrer"
                class="text-xs flex items-center gap-1 hover:underline"
              >
                <ExternalLink strokeWidth={1.5} class="w-4 h-4" />
                Live Site
              </a>
            )}
        </div>
    
        <div class="flex items-center gap-1 ml-auto"> <Star strokeWidth={1.5} />
          <span>{repo.stargazers_count}</span>
        </div>
      </div>
    
      {repo.languagePercentages && Object.keys(repo.languagePercentages).length > 0 && (
        <div class="mt-3 flex flex-wrap gap-2 text-xs">
          {Object.entries(repo.languagePercentages).map(([lang, percent], index) => (
            <span class="flex items-center gap-1 px-2 py-1 bg-medium-gray/5 backdrop-blur border-dark-steal rounded-md"> <span class="font-medium">{lang}</span>
              {/* Only show percentage for the first language (as in your original code) */}
              {index === 0 && (
                <span class="text-medium-gray ml-1">{percent}%</span>
              )}
            </span>
          ))}
        </div>
      )}
</div>