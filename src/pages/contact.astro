---
import Layout from '../layouts/Layout.astro';
import { MapPin, Phone, MoveRight } from 'lucide-svelte';
import CopyButton from '../components/CopyButton.svelte';

const email = "tedenadane@gmail.com"
---

<Layout>
  <section class="mx-auto w-full grid gap-3">
    <div class="grid gap-12 md:grid-cols-2">
      <div class="flex gap-4 flex-col justify-start">
        <h1 class="text-3xl font-bold mb-4">Get in touch</h1>
        <div class="flex flex-col gap-3">
          <p>
            Email : 
            <a href={`mailto:${email}`} class="underline">{email}</a>
            <CopyButton text={email} client:load />
          </p>
          <p class="flex gap-3">
            ...or send me a message here 
            <span class="text-dark-slate dark:text-brand-teal hidden md:inline"> 
              <MoveRight size={28} strokeWidth={1.5} />
            </span> 
          </p>
        </div>
        <div class="flex flex-col gap-3">
          <div class="flex gap-2">
            <span class="text-dark-slate dark:text-brand-teal">
              <MapPin strokeWidth={1.5} />
            </span> 
            Addis Ababa 
          </div>
          <div class="flex gap-2"> 
            <span class="text-dark-slate dark:text-brand-teal"> 
              <Phone strokeWidth={1.5} /> 
            </span> 
            +251 9097 093 70 
          </div>
        </div>
      </div>
      <form id="contact-form" class="flex flex-col gap-4">
        <div class="flex flex-col gap-8">
          <div class="flex flex-col gap-3">
            <label for="email" class="sr-only">Your email:</label>
            <input
              type="email"
              id="email"
              name="email"
              placeholder="Your email"
              required
              class="border border-dark-slate dark:border-medium-gray p-2 rounded"
            />
          </div>
          <div class="flex flex-col gap-3">
            <label for="subject" class="sr-only">Subject:</label>
            <input
              type="text"
              id="subject"
              name="subject"
              placeholder="Subject"
              required
              class="border border-dark-slate dark:border-medium-gray p-2 rounded"
            />
          </div>
          <div class="flex flex-col gap-3">
            <label for="body" class="sr-only">Body:</label>
            <textarea
              name="body"
              id="body"
              rows="6"
              required
              placeholder="Your message"
              class="border border-dark-slate dark:border-medium-gray p-2 rounded"
            ></textarea>
          </div>
          <label class="sr-only">Leave this blank: <input type="text" name="honeypot" /></label>
          <button
            type="submit"
            id="submit-btn"
            class="py-3 border rounded bg-dark-slate text-linen-white hover:text-brand-teal hover:border-brand-teal dark:hover:border-brand-teal dark:hover:bg-dark-slate dark:bg-brand-teal dark:text-dark-slate"
          >
            Send message
          </button>
          <div id="result" aria-live="polite" class="text-sm"></div>
        </div>
      </form>
    </div>
  </section>
</Layout>

  <script>
    import { actions } from 'astro:actions';
    const form = document.getElementById('contact-form');
    const result = document.getElementById('result');
    const submitBtn = document.getElementById('submit-btn');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      submitBtn.disabled = true;
      result.textContent = 'Sending...';
      result.style.color = '';

      try {
        const formData = new FormData(form);
        const { data, error } = await actions.contact(formData);

        if (error) {
          result.textContent = error.message;
          result.style.color = 'red';
          // Display field-specific errors if available
          if (error.cause?.issues) {
            const errorMessages = error.cause.issues.map(issue => `${issue.path[0]}: ${issue.message}`).join('; ');
            result.textContent = `Error: ${errorMessages}`;
          }
        } else {
          result.textContent = data.message;
          result.style.color = 'green';
          form.reset();
        }
      } catch (err) {
        result.textContent = 'Error: Something went wrong';
        result.style.color = 'red';
      } finally {
        submitBtn.disabled = false;
      }
    });
  </script>

  <style>
    #result {
      margin-top: 0.5rem;
      font-weight: bold;
    }
  </style>
